name: RAG CI (CPU, no‑key)

on: [push]

jobs:
  ingest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # -------- Python --------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"    # 若想保守改 3.10 亦可

      # -------- System deps (保險裝編譯工具) --------
      - name: Install build essentials
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake

      # -------- pip cache --------
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
            
      - run: pip install --upgrade pip    # pip 自己先升
      - run: pip install -r requirements.txt

      # -------- GGUF model cache --------
      - name: Cache TinyLlama model
        uses: actions/cache@v4
        with:
          path: models
          key: gguf-tinyllama-v1      # 換模型/版本請修改
          restore-keys: gguf-         # 避免 key 改名後仍可部分命中

      - name: Fetch model if not cached
        run: |
          mkdir -p models
          if [ ! -f models/tinyllama-q4_K_M.gguf ]; then
            wget -q -O models/tinyllama-q4_K_M.gguf \
              https://huggingface.co/TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF/resolve/main/tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf
          fi

      # -------- Smoke test (PDF 下載) --------
      - name: Smoke test crawler
        run: |
          chmod +x bin/smoke_test.sh
          bin/smoke_test.sh

      # -------- 建立向量庫 --------
      - name: Build embeddings
        run: python -m rag.embeddings --max 1

      # -------- End‑to‑End RAG --------
      - name: RAG query demo
        run: |
          python - <<'PY'
          from rag.rag_chain import build_chain
          chain = build_chain()
          ans = chain({"question": "What is FAISS?"})["answer"]
          print("Partial answer:", ans[:200], "...")
          PY

      # -------- API check --------
      - name: FastAPI health check
        run: |
          uvicorn app.main:app --port 8000 --host 127.0.0.1 &
          PID=$!
          trap "kill $PID" EXIT
          for i in {1..10}; do
            if curl -sSf http://127.0.0.1:8000/docs > /dev/null; then
              echo "API UP"; exit 0
            fi
            sleep 2
          done
          echo "API failed to start" && exit 1
