############################################################
#  Stage 1 ── builder  (安裝相依套件到 /root/.local)
############################################################
FROM python:3.10-slim AS builder
WORKDIR /code

# --- 加入編譯工具 ---
RUN apt-get update && \
    apt-get install -y --no-install-recommends build-essential cmake git && \
    rm -rf /var/lib/apt/lists/*

# ❶ 先複製兩支 requirements
COPY requirements/requirements.core.txt requirements/requirements.api.txt ./

# ❷ 先裝共用依賴，再裝 API 專屬依賴
#    --no-cache-dir 可省下 pip cache，縮小映像
RUN pip install --upgrade pip \
 && pip install --user --no-cache-dir \
      # --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cpu \
      # llama_cpp_python>=0.3 \
      -r requirements.core.txt \
      -r requirements.api.txt


# RUN pip install --user --no-cache-dir -r requirements.core.txt \
#  && pip install --user --no-cache-dir -r requirements.api.txt

############################################################
#  Stage 2 ─ runtime
############################################################
FROM python:3.10-slim AS runtime
ENV PYTHONUNBUFFERED=1 \
    PATH=/root/.local/bin:$PATH

WORKDIR /code

# ---- 系統工具（ngrok / jq / build essentials，後面可能要編譯） ----
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl gnupg jq build-essential cmake git && \
    curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | \
        tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && \
    echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | \
        tee /etc/apt/sources.list.d/ngrok.list && \
    apt-get update && apt-get install -y ngrok && \
    rm -rf /var/lib/apt/lists/*

# ---- Python site-packages & 專案程式碼 ----
COPY --from=builder /root/.local /root/.local
COPY . .

# ---- models /start.sh ----
COPY bin/start_api.sh /start.sh
RUN chmod +x /start.sh

EXPOSE 8000
ENTRYPOINT ["/start.sh"]